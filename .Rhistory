install.packages('plotly')
install.packages('caret')
install.packages('kernlab')
data(sleep)
data("spam")
data("ChickWeight")
data("ChickWeight").head()
head(data("ChickWeight"))
library(caret)
library(kernlab)
data("spam")
inTrain <- createDataPartition(y=spam$type, p=0.75, list = FALSE)
training <-spam[inTrain]
testing <- spam[-inTrain]
dim(training)
View(inTrain)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
set.seed(0)
modelFit <- train(type ~., data = training, method='glm')
modelFit
modelFit <- train(type ~., data = training, method='glm')
install.packages('e1071', dependencies=TRUE)
modelFit <- train(type ~., data = training, method='glm')
modelFit
modelFit$finalModel
predictions <- predict(modelFit,newdata=testing)
predictions
confusionMatrix(predictions,testing$type)
sapply(folds, length)
data("spam")
#use createDataPartition to separate out a training and testing sample
inTrain <- createDataPartition(y=spam$type, p=0.75, list = FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
set.seed(0)
folds <- createFolds(y=spam$type,k=10,list=TRUE,returnTrain = TRUE)
sapply(folds, length)
folds <- createFolds(y=spam$type,k=10,list=TRUE,returnTrain = FALSE)
sapply(folds, length)
sapply(folds, length)
args(train.default)
modelFit
install.packages('ISLR')
#training options in caret
library(caret)
library(kernlab)
data("spam")
inTrain <- createDataPartition(y=spam$type, p=0.75, list = FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
set.seed(0)
modelFit <- train(type ~., data = training, method = 'pls')
modelFit <- train(type ~., data = training, method = 'pls')
modelFit
data("spam")
folds <- createFolds(y=spam$type,k=10,list=TRUE,returnTrain = FALSE)
